<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>hulkvision</title>
    <link>https://hulkvision.gitlab.io/</link>
    <description>Recent content on hulkvision</description>
    <image>
      <title>hulkvision</title>
      <url>https://hulkvision.gitlab.io/profile.png</url>
      <link>https://hulkvision.gitlab.io/profile.png</link>
    </image>
    <generator>Hugo -- 0.134.0</generator>
    <language>en</language>
    <lastBuildDate>Wed, 04 Sep 2024 11:16:51 +0530</lastBuildDate>
    <atom:link href="https://hulkvision.gitlab.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Exploiting JavaScript Interface for Unauthorized Access in a &#39;global&#39; cryptocurrency exchange android app</title>
      <link>https://hulkvision.gitlab.io/blog/javascript-interface/exploiting-javascript-interface/</link>
      <pubDate>Wed, 04 Sep 2024 11:16:51 +0530</pubDate>
      <guid>https://hulkvision.gitlab.io/blog/javascript-interface/exploiting-javascript-interface/</guid>
      <description>&lt;h2 id=&#34;tl-dr&#34;&gt;TL-DR&lt;/h2&gt;
&lt;p&gt;The application had implemented proper host validation but it was missing validation on scheme part of the uri, which allowed me to open arbitrary url in the app&amp;rsquo;s webview, later on further analysis of the application I found that the webview has exposed some sensitive javascript interfaces which allowed me to perform critical authenticated action like placing a trade order, canceling trade order or deactivating the account.&lt;/p&gt;
&lt;h2 id=&#34;intro&#34;&gt;Intro&lt;/h2&gt;
&lt;p&gt;Webview in Android Ecosystem is an extension of Android&amp;rsquo;s view class that lets you display web pages as a part of your application activity layout. You can call it as a web browser built into your application but it doesn&amp;rsquo;t include the features of a fully developed web browser, such as navigation controls or an address bar. It is one of the widely used component in android application ecosystem, it is also prone to number of potential errors. If it is possible to load arbitrary url or execute arbitrary javascript in webview it could potentially lead to leaking of authentication tokens, the theft of arbitrary files and access to arbitrary activities. In this blog I will show how I exploited the exposed javascript interface by the application to perform critical authenticated actions like placing a trade order, cancelling trade order or deactivting the account.&lt;/p&gt;</description>
    </item>
    <item>
      <title>RCE in Adobe Acrobat Reader for android(CVE-2021-40724)</title>
      <link>https://hulkvision.gitlab.io/blog/post1/</link>
      <pubDate>Fri, 14 Jan 2022 11:16:51 +0530</pubDate>
      <guid>https://hulkvision.gitlab.io/blog/post1/</guid>
      <description>&lt;h2 id=&#34;-summary&#34;&gt;# Summary&lt;/h2&gt;
&lt;p&gt;While testing Adobe Acrobat reader app , the app has a feature which allows user to open pdfs directly from http/https url. This feature was vulnerable to path traversal vulnerability.
Abode reader was also using Google play core library for dynamic code loading. using path traversal bug and dynamic code loading,i was able to acheive remote code execution.&lt;/p&gt;
&lt;h2 id=&#34;-finding-path-traversal-vulnerability&#34;&gt;# Finding Path traversal vulnerability&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;        &amp;lt;activity android:theme=&amp;#34;@style/Theme_Virgo_SplashScreen&amp;#34; android:name=&amp;#34;com.adobe.reader.AdobeReader&amp;#34; android:exported=&amp;#34;true&amp;#34; android:launchMode=&amp;#34;singleTask&amp;#34; android:screenOrientation=&amp;#34;user&amp;#34; android:configChanges=&amp;#34;keyboardHidden|screenLayout|screenSize|smallestScreenSize&amp;#34; android:noHistory=&amp;#34;false&amp;#34; android:resizeableActivity=&amp;#34;true&amp;#34;&amp;gt;
            &amp;lt;intent-filter&amp;gt;
                &amp;lt;action android:name=&amp;#34;android.intent.action.VIEW&amp;#34;/&amp;gt;
                &amp;lt;action android:name=&amp;#34;android.intent.action.EDIT&amp;#34;/&amp;gt;
                &amp;lt;category android:name=&amp;#34;android.intent.category.DEFAULT&amp;#34;/&amp;gt;
                &amp;lt;category android:name=&amp;#34;android.intent.category.BROWSABLE&amp;#34;/&amp;gt;
                &amp;lt;data android:scheme=&amp;#34;file&amp;#34;/&amp;gt;
                &amp;lt;data android:scheme=&amp;#34;content&amp;#34;/&amp;gt;
                &amp;lt;data android:scheme=&amp;#34;http&amp;#34;/&amp;gt;
                &amp;lt;data android:scheme=&amp;#34;https&amp;#34;/&amp;gt;
                &amp;lt;data android:mimeType=&amp;#34;application/pdf&amp;#34;/&amp;gt;
            &amp;lt;/intent-filter&amp;gt;
&lt;/code&gt;&lt;/pr</description>
    </item>
  </channel>
</rss>
